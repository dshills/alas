name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        go-version: ['1.21', '1.22', '1.23', '1.24']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Install LLVM
      run: |
        sudo apt-get update
        sudo apt-get install -y llvm-14 llvm-14-dev
        sudo ln -sf /usr/bin/llvm-config-14 /usr/bin/llvm-config
    
    - name: Install dependencies
      run: |
        go mod download
        go mod tidy
    
    - name: Run tests
      run: make test
    
    - name: Build
      run: make build
    
    - name: Run linter
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --timeout=5m

  integration:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
    
    - name: Install LLVM
      run: |
        sudo apt-get update
        sudo apt-get install -y llvm-14 llvm-14-dev clang
        sudo ln -sf /usr/bin/llvm-config-14 /usr/bin/llvm-config
    
    - name: Build project
      run: make build
    
    - name: Run example validation
      run: make validate-example
    
    - name: Run example programs
      run: make run-all-examples
    
    - name: Compile examples to LLVM IR
      run: make compile-examples
    
    - name: Clean up
      run: make clean

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
    
    - name: Run security scan
      uses: securecodewarrior/github-action-add-sarif@v1
      with:
        sarif-file: gosec-report.sarif
      continue-on-error: true
    
    - name: Run gosec Security Scanner
      uses: securecodewarrior/github-action-gosec@master
      with:
        args: '-fmt sarif -out gosec-report.sarif ./...'